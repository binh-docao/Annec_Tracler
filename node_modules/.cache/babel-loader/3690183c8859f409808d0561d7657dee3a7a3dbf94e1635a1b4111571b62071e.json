{"ast":null,"code":"var _jsxFileName = \"/Users/binhdocao/Desktop/FindAnnec/src/components/GoogleMaps.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\n// import { Map, GoogleApiWrapper } from 'google-maps-react';\n\n// import { GoogleMap, useJsApiLoader } from '@react-google-maps/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: '500px',\n  height: '500px'\n};\nconst center = {\n  lat: 30.612552,\n  lng: -96.341326\n};\nfunction Maps() {\n  _s();\n  const {\n    isLoaded\n  } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: \"AIzaSyDfNjTUiHor5frrxETqjmmRFPlQFbxAkro\"\n  });\n  const [map, setMap] = React.useState(null);\n  const onLoad = React.useCallback(function callback(map) {\n    // This is just an example of getting and using the map instance!!! don't just blindly copy!\n    const bounds = new window.google.maps.LatLngBounds(center);\n    map.fitBounds(bounds);\n    setMap(map);\n  }, []);\n  const onUnmount = React.useCallback(function callback(map) {\n    setMap(null);\n  }, []);\n  return isLoaded ? /*#__PURE__*/_jsxDEV(\"center\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Google Maps API\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: containerStyle,\n      center: center,\n      zoom: 10,\n      onLoad: onLoad,\n      mapTypeId: \"satellite\",\n      onUnmount: onUnmount,\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n_s(Maps, \"sc/DS85Udqb0HC94DVNruSImuio=\", true);\n_c = Maps;\nexport default _c2 = /*#__PURE__*/React.memo(Maps);\nvar _c, _c2;\n$RefreshReg$(_c, \"Maps\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","containerStyle","width","height","center","lat","lng","Maps","_s","isLoaded","useJsApiLoader","id","googleMapsApiKey","map","setMap","useState","onLoad","useCallback","callback","bounds","window","google","maps","LatLngBounds","fitBounds","onUnmount","children","fileName","_jsxFileName","lineNumber","columnNumber","GoogleMap","mapContainerStyle","zoom","mapTypeId","_c","_c2","memo","$RefreshReg$"],"sources":["/Users/binhdocao/Desktop/FindAnnec/src/components/GoogleMaps.jsx"],"sourcesContent":["import React from 'react'\n// import { Map, GoogleApiWrapper } from 'google-maps-react';\n\n// import { GoogleMap, useJsApiLoader } from '@react-google-maps/api';\n\nconst containerStyle = {\n  width: '500px',\n  height: '500px'\n};\n\nconst center = {\n  lat: 30.612552,\n  lng: -96.341326\n};\n\nfunction Maps() {\n  const { isLoaded } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: \"AIzaSyDfNjTUiHor5frrxETqjmmRFPlQFbxAkro\"\n  })\n\n  const [map, setMap] = React.useState(null)\n\n  const onLoad = React.useCallback(function callback(map) {\n    // This is just an example of getting and using the map instance!!! don't just blindly copy!\n    const bounds = new window.google.maps.LatLngBounds(center);\n    map.fitBounds(bounds);\n\n    setMap(map)\n  }, [])\n\n  const onUnmount = React.useCallback(function callback(map) {\n    setMap(null)\n  }, [])\n\n  return isLoaded ? (\n    \n    <center>\n        <h1>Google Maps API</h1>\n      <GoogleMap\n        mapContainerStyle={containerStyle}\n        center={center}\n        zoom={10}\n        onLoad={onLoad}\n        mapTypeId='satellite'\n        onUnmount={onUnmount}\n      >\n        { /* Child components, such as markers, info windows, etc. */ }\n        <></>\n      </GoogleMap>\n      </center>\n  ) : <></>\n}\n\nexport default React.memo(Maps)"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB;;AAEA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEA,MAAMC,cAAc,GAAG;EACrBC,KAAK,EAAE,OAAO;EACdC,MAAM,EAAE;AACV,CAAC;AAED,MAAMC,MAAM,GAAG;EACbC,GAAG,EAAE,SAAS;EACdC,GAAG,EAAE,CAAC;AACR,CAAC;AAED,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM;IAAEC;EAAS,CAAC,GAAGC,cAAc,CAAC;IAClCC,EAAE,EAAE,mBAAmB;IACvBC,gBAAgB,EAAE;EACpB,CAAC,CAAC;EAEF,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGlB,KAAK,CAACmB,QAAQ,CAAC,IAAI,CAAC;EAE1C,MAAMC,MAAM,GAAGpB,KAAK,CAACqB,WAAW,CAAC,SAASC,QAAQA,CAACL,GAAG,EAAE;IACtD;IACA,MAAMM,MAAM,GAAG,IAAIC,MAAM,CAACC,MAAM,CAACC,IAAI,CAACC,YAAY,CAACnB,MAAM,CAAC;IAC1DS,GAAG,CAACW,SAAS,CAACL,MAAM,CAAC;IAErBL,MAAM,CAACD,GAAG,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMY,SAAS,GAAG7B,KAAK,CAACqB,WAAW,CAAC,SAASC,QAAQA,CAACL,GAAG,EAAE;IACzDC,MAAM,CAAC,IAAI,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOL,QAAQ,gBAEbX,OAAA;IAAA4B,QAAA,gBACI5B,OAAA;MAAA4B,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BhC,OAAA,CAACiC,SAAS;MACRC,iBAAiB,EAAE/B,cAAe;MAClCG,MAAM,EAAEA,MAAO;MACf6B,IAAI,EAAE,EAAG;MACTjB,MAAM,EAAEA,MAAO;MACfkB,SAAS,EAAC,WAAW;MACrBT,SAAS,EAAEA,SAAU;MAAAC,QAAA,eAGrB5B,OAAA,CAAAE,SAAA,mBAAI;IAAC;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC,gBACThC,OAAA,CAAAE,SAAA,mBAAI,CAAC;AACX;AAACQ,EAAA,CArCQD,IAAI;AAAA4B,EAAA,GAAJ5B,IAAI;AAuCb,eAAA6B,GAAA,gBAAexC,KAAK,CAACyC,IAAI,CAAC9B,IAAI,CAAC;AAAA,IAAA4B,EAAA,EAAAC,GAAA;AAAAE,YAAA,CAAAH,EAAA;AAAAG,YAAA,CAAAF,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}