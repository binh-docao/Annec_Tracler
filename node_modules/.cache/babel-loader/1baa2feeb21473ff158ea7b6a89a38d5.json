{"ast":null,"code":"import _slicedToArray from \"/Users/binhdocao/Desktop/FindAnnec/ANNEC-Tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"/Users/binhdocao/Desktop/FindAnnec/ANNEC-Tracker/src/components/GoogleMaps.jsx\";\nimport React, { useState } from 'react';\nimport { GoogleMap, useJsApiLoader, Marker } from '@react-google-maps/api';\nvar containerStyle = {\n  width: '60%',\n  // Use percentage value to make it responsive\n  height: '80vh' // Use a fixed height or percentage value to control the height\n};\n\nvar mapWrapperStyle = {\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  height: '100vh',\n  background: 'lightgray'\n};\nvar Maps = function Maps(_ref) {\n  var latitude = _ref.latitude,\n    longitude = _ref.longitude;\n  var _useJsApiLoader = useJsApiLoader({\n      id: 'google-map-script',\n      googleMapsApiKey: \"YOUR_GOOGLE_MAPS_API_KEY\" // Replace with your API key\n    }),\n    isLoaded = _useJsApiLoader.isLoaded;\n  var center = {\n    lat: latitude,\n    lng: longitude\n  };\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    map = _useState2[0],\n    setMap = _useState2[1]; // Create a state variable for the map instance\n  var onLoad = React.useCallback(function callback(map) {\n    var bounds = new window.google.maps.LatLngBounds(center);\n    map.fitBounds(bounds);\n    setMap(map);\n  }, [center]);\n  var onUnmount = React.useCallback(function callback() {\n    setMap(null);\n  }, []);\n  return isLoaded ? /*#__PURE__*/React.createElement(\"div\", {\n    style: mapWrapperStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bg-danger\",\n    style: {\n      padding: '10px',\n      borderRadius: '8px',\n      boxShadow: '0 0 10px rgba(0,0,0,0.5)'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(GoogleMap, {\n    mapContainerStyle: containerStyle,\n    center: center,\n    zoom: 8,\n    mapTypeId: \"satellite\",\n    onLoad: onLoad // Call the onLoad function here\n    ,\n    onUnmount: onUnmount,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Marker, {\n    position: center,\n    icon: {\n      url: \"https://maps.google.com/mapfiles/ms/icons/red-dot.png\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  })))) : /*#__PURE__*/React.createElement(React.Fragment, null);\n};\nexport default React.memo(Maps);","map":{"version":3,"names":["React","useState","GoogleMap","useJsApiLoader","Marker","containerStyle","width","height","mapWrapperStyle","display","justifyContent","alignItems","background","Maps","_ref","latitude","longitude","_useJsApiLoader","id","googleMapsApiKey","isLoaded","center","lat","lng","_useState","_useState2","_slicedToArray","map","setMap","onLoad","useCallback","callback","bounds","window","google","maps","LatLngBounds","fitBounds","onUnmount","createElement","style","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","padding","borderRadius","boxShadow","mapContainerStyle","zoom","mapTypeId","position","icon","url","Fragment","memo"],"sources":["/Users/binhdocao/Desktop/FindAnnec/ANNEC-Tracker/src/components/GoogleMaps.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { GoogleMap, useJsApiLoader, Marker } from '@react-google-maps/api';\n\nconst containerStyle = {\n  width: '60%', // Use percentage value to make it responsive\n  height: '80vh', // Use a fixed height or percentage value to control the height\n};\n\nconst mapWrapperStyle = {\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  height: '100vh',\n  background: 'lightgray',\n};\n\nconst Maps = ({ latitude, longitude }) => {\n  const { isLoaded } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: \"YOUR_GOOGLE_MAPS_API_KEY\", // Replace with your API key\n  });\n\n  const center = { lat: latitude, lng: longitude };\n\n  const [map, setMap] = useState(null); // Create a state variable for the map instance\n\n  const onLoad = React.useCallback(function callback(map) {\n    const bounds = new window.google.maps.LatLngBounds(center);\n    map.fitBounds(bounds);\n    setMap(map);\n  }, [center]);\n\n  const onUnmount = React.useCallback(function callback() {\n    setMap(null);\n  }, []);\n\n  return isLoaded ? (\n    <div style={mapWrapperStyle}>\n      <div className='bg-danger' style={{ padding: '10px', borderRadius: '8px', boxShadow: '0 0 10px rgba(0,0,0,0.5)' }}>\n        <GoogleMap\n          mapContainerStyle={containerStyle}\n          center={center}\n          zoom={8}\n          mapTypeId='satellite'\n          onLoad={onLoad} // Call the onLoad function here\n          onUnmount={onUnmount}\n        >\n          <Marker position={center} icon={{ url: \"https://maps.google.com/mapfiles/ms/icons/red-dot.png\" }} />\n        </GoogleMap>\n      </div>\n    </div>\n  ) : <></>;\n};\n\nexport default React.memo(Maps);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}